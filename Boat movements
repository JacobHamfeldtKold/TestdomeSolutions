using System;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class BoatMovements
{
    public static bool CanTravelTo(bool[,] gameMatrix, int fromRow, int fromColumn, int toRow, int toColumn)
    {
        if (fromRow > gameMatrix.GetLength(0) - 1 || toRow > gameMatrix.GetLength(0) - 1)
            return false;

        if (fromColumn > gameMatrix.GetLength(1) - 1 || toColumn > gameMatrix.GetLength(1) - 1)
            return false;

        if (fromRow != toRow && fromColumn != toColumn)
            return false;

       if (toRow - fromRow > 1)
           return false;
       
        if (fromRow - toRow > 1)
            return false;
        
        if (fromColumn - toColumn > 1)
            return false;
        if (toColumn - fromColumn > 2)
            return false;

        if (fromRow == toRow)
        {
            int[] range = Enumerable.Range(Math.Min(fromColumn, toColumn), Math.Max(fromColumn, toColumn) - Math.Min(fromColumn, toColumn) + 1).ToArray();
            foreach (int i in range)
            {
                if (!gameMatrix[toRow, i])
                    return false;
            }
                    
            return true;
        }

        if (fromColumn == toColumn)
        {
            int[] range = Enumerable.Range(Math.Min(fromRow, toRow), Math.Max(fromRow, toRow) - Math.Min(fromRow, toRow) + 1).ToArray();
            foreach (int i in range)
            {
                if (!gameMatrix[i, fromColumn])
                    return false;
            }
            
            return true;
        }

        return true;
    }

    public static void Main()
    {
        bool[,] gameMatrix = 
        {
            {false, true,  true,  false, false, false},
            {true,  true,  true,  false, false, false},
            {true,  true,  true,  true,  true,  true},
            {false, true,  true,  false, true,  true},
            {false, true,  true,  true,  false, true},
            {false, false, false, false, false, false},
        };

        Console.WriteLine(CanTravelTo(gameMatrix, 3, 2, 2, 2)); // true, Valid move
        Console.WriteLine(CanTravelTo(gameMatrix, 3, 2, 3, 4)); // false, Can't travel through land
        Console.WriteLine(CanTravelTo(gameMatrix, 3, 2, 6, 2)); // false, Out of bounds
    }
}
